{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\contadorpro\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState({\n    user: null,\n    isAuthenticated: false,\n    loading: true\n  });\n  const login = user => {\n    // Manejar login\n    setAuthState({\n      user,\n      isAuthenticated: true,\n      loading: false\n    });\n  };\n  const logout = () => {\n    // Manejar logout\n    setAuthState({\n      user: null,\n      isAuthenticated: false,\n      loading: false\n    });\n  };\n  useEffect(() => {\n    // Simulación de verificación de sesión al cargar la aplicación\n    const checkAuth = async () => {\n      try {\n        // Aquí podrías realizar una llamada a la API para verificar la sesión\n        // Por ejemplo: const response = await fetch('/api/checkAuth');\n        // const data = await response.json();\n        // setAuthState({ user: data.user, isAuthenticated: true, loading: false });\n\n        // Simulación de autenticación\n        setAuthState({\n          user: null,\n          isAuthenticated: false,\n          loading: false\n        });\n      } catch (error) {\n        setAuthState({\n          user: null,\n          isAuthenticated: false,\n          loading: false\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"pzn0sRTbiqJfFvaqcRbT9sxfkX4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authState","setAuthState","user","isAuthenticated","loading","login","logout","checkAuth","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nicol/contadorpro/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authState, setAuthState] = useState({\r\n    user: null,\r\n    isAuthenticated: false,\r\n    loading: true,\r\n  });\r\n\r\n  const login = (user) => {\r\n    // Manejar login\r\n    setAuthState({\r\n      user,\r\n      isAuthenticated: true,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  const logout = () => {\r\n    // Manejar logout\r\n    setAuthState({\r\n      user: null,\r\n      isAuthenticated: false,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Simulación de verificación de sesión al cargar la aplicación\r\n    const checkAuth = async () => {\r\n      try {\r\n        // Aquí podrías realizar una llamada a la API para verificar la sesión\r\n        // Por ejemplo: const response = await fetch('/api/checkAuth');\r\n        // const data = await response.json();\r\n        // setAuthState({ user: data.user, isAuthenticated: true, loading: false });\r\n\r\n        // Simulación de autenticación\r\n        setAuthState({\r\n          user: null,\r\n          isAuthenticated: false,\r\n          loading: false,\r\n        });\r\n      } catch (error) {\r\n        setAuthState({\r\n          user: null,\r\n          isAuthenticated: false,\r\n          loading: false,\r\n        });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authState, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IACzCU,IAAI,EAAE,IAAI;IACVC,eAAe,EAAE,KAAK;IACtBC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAIH,IAAI,IAAK;IACtB;IACAD,YAAY,CAAC;MACXC,IAAI;MACJC,eAAe,EAAE,IAAI;MACrBC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAL,YAAY,CAAC;MACXC,IAAI,EAAE,IAAI;MACVC,eAAe,EAAE,KAAK;MACtBC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA;QACA;QACA;;QAEA;QACAN,YAAY,CAAC;UACXC,IAAI,EAAE,IAAI;UACVC,eAAe,EAAE,KAAK;UACtBC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdP,YAAY,CAAC;UACXC,IAAI,EAAE,IAAI;UACVC,eAAe,EAAE,KAAK;UACtBC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC;IAEDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,SAAS;MAAEK,KAAK;MAAEC;IAAO,CAAE;IAAAR,QAAA,EACvDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CAzDWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}